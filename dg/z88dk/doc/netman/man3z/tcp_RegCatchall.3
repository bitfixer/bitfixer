.TH tcp_RegCatchall 3z "18 February 2000" ""  "z88dk Programmer's Manual"
.SH NAME
tcp_RegCatchall \- (De)register packet catcher
.SH SYNOPSIS
.nf
.B #include <net/misc.h>
.sp
.BI "int tcp_RegCatchall(int "libcall );
.fi
.SH DESCRIPTION
The \fBtcp_RegCatchall()\fP function registers or deregisters a
function that is used to catch all incoming packets after it has
passed the basic tests of checksumming, length and ttl-checking.
l-checking.
.PP
The parameter \fBlibcall\fP is the ID for a shared library/packet
call which has the prototype thus:
.sp
.BI "bool_t Function(void *" dp ", size_t "len );
.PP
Where \fIdp\fP is the address of the packet and \fIlen\fP is the
length of the packet. This function should return TRUE/FALSE to
indicate to the ZSock kernel whether the function has dealt with the
packet and ZSock should not process it.

.SH "RETURN VALUE"
\fBtcp_RegCatchall()\fP returns the previous ID of the catchall
function.

.SH NOTES
Should you wish to stop calling your catchall function simply call
the function with an argument of NULL.
.PP
This function is of use should somebody write a driver for an
as yet unsupported protocol.
.PP
The package call should page in the ZSock data area using the function
\fBtcp_pagein(3z)\fP.
.PP
This call could for example be used to implement a traceroute style
routine to catch ICMP replies. Returning TRUE when it has received
an ICMP reply packet of the correct tyoe, and FALSE otherwise.


.SH "SEE ALSO"
.BR tcp_pagein "(3z), " tcp_pageout (3z)

.SH AUTHOR
Dominic Morris <dom@jb.man.ac.uk>

